/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChrisBroadcasterUI.java
 *
 * Created on Oct 7, 2011, 3:49:47 PM
 */
package my.ChrisBroadcaster;

import com.apple.dnssd.*;
import java.net.InetSocketAddress;
import java.nio.channels.ServerSocketChannel;

/**
 *
 * @author christophermeyer
 */
public class ChrisBroadcasterUI extends javax.swing.JFrame implements RegisterListener{
        
    //VARIABLE DECLARATION
    private DNSSDRegistration serviceRecord;
    private boolean registered;
    private int listeningPort;
    private ServerSocketChannel listeningChannel;
    private static String ServiceType = "_killerapp._tcp";
        
        
    /** Creates new form ChrisBroadcasterUI */
    public ChrisBroadcasterUI() {
        initComponents();
        
        try{        
        //Register service
        listeningChannel = ServerSocketChannel.open();
        listeningChannel.socket().bind(new InetSocketAddress(0) {});
        listeningPort = listeningChannel.socket().getLocalPort();
        DNSSD.register("ChrisBroadcast", ServiceType, listeningPort, this);
        
        } catch(Exception e) { ; }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtText = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BROADCASTER");

        jScrollPane1.setViewportView(txtText);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 243, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChrisBroadcasterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChrisBroadcasterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChrisBroadcasterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChrisBroadcasterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ChrisBroadcasterUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane txtText;
    // End of variables declaration//GEN-END:variables

    @Override
    public void operationFailed(DNSSDService dnssds, int i) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void serviceRegistered(DNSSDRegistration dnssdr, int i, String string, String string1, String string2) {
        txtText.setText(dnssdr.toString() + " | "  + i + " | " + string + " | " + string1 + " | " + string2);
    }
}
